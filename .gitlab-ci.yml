# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle
image: gradle:jdk11

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - build
  - test
  - coverage

build:
  stage: build
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  only:
    changes:
      - src/**/*

test:
  stage: test
  script:
    - gradle check
    - echo `<build/reports/jacoco/test/html/index.html`
  needs: ["build"]
  dependencies:
    - build
  artifacts:
    paths:
      - build/reports/jacoco/test/jacocoTestReport.xml
    reports:
      junit: build/test-results/test/**/TEST-*.xml
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

coverage:
  stage: coverage
  image: haynes/jacoco2cobertura:1.0.3
  script:
    # convert report from jacoco to cobertura
    - 'python /opt/cover2cover.py build/reports/jacoco/test/jacocoTestReport.xml src/main/java > build/cobertura.xml'
    # read the <source></source> tag and prepend the path to every filename attribute
    - 'python /opt/source2filename.py build/cobertura.xml'
  needs: ["test"]
  dependencies:
    - test
  artifacts:
    reports:
      cobertura: build/cobertura.xml